<Styles
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:AvaloniaUI.Ribbon.Converters;assembly=AvaloniaUI.Ribbon"
    xmlns:local="clr-namespace:AvaloniaUI.Ribbon;assembly=AvaloniaUI.Ribbon">

    <Style Selector="local|RibbonMenu">
        <Style.Resources>
            <ResourceDictionary>
                <ResourceDictionary.MergedDictionaries>
                    <ResourceInclude Source="RibbonMenuItem.axaml"/>
                </ResourceDictionary.MergedDictionaries>
            </ResourceDictionary>
            <converters:MathAddConverter x:Key="MathAddConverter" />
        </Style.Resources>
        
        
        <Setter Property="Background" Value="{DynamicResource ThemeControlMidBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ThemeBorderLowBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource ThemeBorderThickness}" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Header" Value="{DynamicResource AvaloniaRibbon.File}" />
        <Setter Property="Template">
            <ControlTemplate>
                <Panel x:Name="MenuCanvas">
                    <ToggleButton
                        x:Name="MenuPopupToggle"
                        Padding="{TemplateBinding Padding}"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Content="{TemplateBinding Header}"
                        FontSize="12.5"
                        Foreground="{TemplateBinding Foreground}"
                        IsChecked="{Binding IsMenuOpen, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}" />
                    <Popup
                        x:Name="MenuPopup"
                        Width="{Binding $parent[Ribbon].Bounds.Width}"
                        IsLightDismissEnabled="True"
                        ClipToBounds="True"
                        MaxHeight="{Binding $parent[TopLevel].Height}"
                        Placement="RightEdgeAlignedTop"
                        IsOpen="{Binding IsMenuOpen, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}"
                        PlacementTarget="{Binding  #MenuPopupToggle}">
                        <Border
                            x:Name="MenuRootBorder"
                            Background="{DynamicResource MenuFlyoutPresenterBackground}"
                            BorderBrush="{DynamicResource MenuFlyoutPresenterBorderBrush}"
                            BorderThickness="{DynamicResource MenuFlyoutPresenterBorderThemeThickness}"
                            CornerRadius="{DynamicResource OverlayCornerRadius}"
                            TextBlock.Foreground="{DynamicResource ThemeForegroundBrush}">
                            <Grid RowDefinitions="Auto,*">
                                <ToggleButton Grid.Row="0"
                                              x:Name="BackButton"
                                              Width="{Binding  #MenuPopupToggle.Bounds.Width}"
                                              Height="{Binding #MenuPopupToggle.Bounds.Height}"
                                              Padding="{TemplateBinding Padding}"
                                              HorizontalContentAlignment="Center"
                                              VerticalContentAlignment="Center"
                                              BorderThickness="{TemplateBinding BorderThickness}"
                                              ClickMode="Press"
                                              DockPanel.Dock="Top"
                                              IsChecked="{Binding !IsMenuOpen, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                    <Panel Width="24" Height="24">
                                        <Ellipse Stroke="{Binding $parent[ToggleButton].Foreground}"
                                                 StrokeThickness="1" />
                                        <Panel Width="14" Height="10">
                                            <Rectangle
                                                Height="1"
                                                VerticalAlignment="Center"
                                                Fill="{Binding $parent[ToggleButton].Foreground}" />
                                            <Path
                                                HorizontalAlignment="Left"
                                                Data="M 5 0 L 0 5 L 5 10"
                                                Stroke="{Binding $parent[ToggleButton].Foreground}"
                                                StrokeThickness="1" />
                                        </Panel>
                                    </Panel>
                                </ToggleButton>
                                <TabControl Grid.Row="1" x:Name="PART_TabControl" TabStripPlacement="Left"
                                            ItemsSource="{TemplateBinding ItemsCollection}" >
                                    <TabControl.ItemTemplate>
                                        <DataTemplate>
                                            <DockPanel
                                                Margin="{TemplateBinding Padding}"
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Center">
                                                <ContentPresenter
                                                    Margin="0,0,4,0"
                                                    Background="Transparent"
                                                    Content="{Binding Icon,RelativeSource={RelativeSource AncestorType=RibbonMenuItem}}"
                                                    DockPanel.Dock="Left" />
                                                <ContentPresenter
                                                    VerticalAlignment="Center"
                                                    HorizontalContentAlignment="Left"
                                                    VerticalContentAlignment="Center"
                                                    Background="Transparent"
                                                    Content="{Binding Header,RelativeSource={RelativeSource AncestorType=RibbonMenuItem}}" />
                                            </DockPanel>
                                        </DataTemplate>
                                    </TabControl.ItemTemplate>
                                </TabControl>
                            </Grid>

                        </Border>
                    </Popup>
                </Panel>
            </ControlTemplate>
        </Setter>
    </Style>
    <Style Selector="local|Ribbon[Orientation=Horizontal] local|RibbonMenu">
        <Setter Property="Padding" Value="16,4" />
    </Style>
    <Style Selector="local|Ribbon[Orientation=Vertical] local|RibbonMenu">
        <Setter Property="Padding" Value="4" />
    </Style>
    <Style
        Selector="local|Ribbon local|RibbonMenu /template/ ToggleButton#ContentButton:not(:pointerover):not(:pressed):not(:checked)">
        <Setter Property="Foreground" Value="{Binding $parent[local:Ribbon].Foreground}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
    </Style>
    <Style
        Selector="local|Ribbon local|RibbonMenu /template/ ToggleButton#BackButton:not(:pointerover):not(:pressed):not(:checked)">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
    </Style>
    


    <!--<Style Selector="local|RibbonMenuItem">
        <Setter Property="Theme">
            <Dat>
                <DockPanel>
                    <Button
                        x:Name="PART_ContentButton"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        HorizontalContentAlignment="Stretch"
                        VerticalContentAlignment="Center"
                        Command="{TemplateBinding Command}"
                        CommandParameter="{TemplateBinding CommandParameter}">
                    </Button>
                    <DockPanel
                        Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center">
                        <ContentPresenter
                            Margin="0,0,4,0"
                            Background="Transparent"
                            Content="{TemplateBinding Icon}"
                            DockPanel.Dock="Left" />
                        <ContentPresenter
                            VerticalAlignment="Center"
                            HorizontalContentAlignment="Left"
                            VerticalContentAlignment="Center"
                            Background="Transparent"
                            Content="{TemplateBinding Header}" />
                    </DockPanel>
                </DockPanel>
            </D>
        </Setter>
    </Style>

    <Style
        Selector="local|RibbonMenuItem[IsSelected=False]:not(:pointerover) /template/ :is(Button):not(:pointerover):not(:pressed):not(:checked)">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
    </Style>-->

    <!--Style Selector="local|RibbonMenu:checked /template/ ContentPresenter">
    <Setter Property="Background" Value="{DynamicResource ThemeControlHighBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ThemeBorderMidBrush}" />
    <Setter Property="TextBlock.Foreground" Value="{DynamicResource ThemeForegroundBrush}" />
  </Style>
  <Style Selector="local|RibbonMenu:pointerover /template/ ContentPresenter">
    <Setter Property="Background" Value="{DynamicResource ThemeControlMidBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ThemeBorderMidBrush}" />
    <Setter Property="TextBlock.Foreground" Value="{DynamicResource ThemeForegroundBrush}" />
  </Style>
  <Style Selector="local|RibbonMenu:pressed  /template/ ContentPresenter">
    <Setter Property="Background" Value="{DynamicResource ThemeControlHighBrush}" />
  </Style>
  <Style Selector="local|RibbonMenu:disabled /template/ ContentPresenter">
    <Setter Property="Opacity" Value="{DynamicResource ThemeDisabledOpacity}" />
  </Style>
  <Style Selector="local|Ribbon[Orientation=Horizontal] local|RibbonMenu">
    <Setter Property="Padding" Value="16,0" />
  </Style>
  <Style Selector="local|Ribbon[Orientation=Vertical] local|RibbonMenu">
    <Setter Property="Padding" Value="0" />
  </Style>
  <Style Selector="local|Ribbon local|RibbonMenu">
    <Setter Property="IsChecked" Value="{Binding IsMenuOpen, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:Ribbon}}, Mode=TwoWay}" />
  </Style>
  <Style Selector="local|Ribbon local|RibbonMenu /template/ ContentPresenter">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderBrush" Value="Transparent" />
  </Style>
  <Style Selector="local|RibbonWindow local|Ribbon local|RibbonMenu">
    <Setter Property="Foreground" Value="{Binding TitleBarForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:RibbonWindow}}" />
  </Style>
  <Style Selector="local|RibbonWindow[IsActive=False] local|Ribbon local|RibbonMenu:not(:pointerover):not(:pressed):not(:checked) /template/ ContentPresenter#PART_ContentPresenter">
    <Setter Property="Opacity" Value="0.5" />
  </Style>

  <Style Selector="local|RibbonMenu /template/ Menu.RibbonMenuMenu">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="ItemsPanel">
      <ItemsPanelTemplate>
        <StackPanel Orientation="Vertical" />
      </ItemsPanelTemplate>
    </Setter>
  </Style>

  <Style Selector="local|RibbonMenu /template/ Menu.RibbonMenuMenu MenuItem">
    <Setter Property="Foreground" Value="{DynamicResource ThemeForegroundBrush}" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Padding" Value="10" />
    <Setter Property="Template">
      <ControlTemplate>
        <Border Name="root"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
          <Grid ColumnDefinitions="20,5,*,20">
            <ContentPresenter Name="icon"
                              Content="{TemplateBinding Icon}"
                              Width="16"
                              Height="16"
                              Margin="3"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center" />
            <Path Name="check"
                  Fill="{TemplateBinding Foreground}"
                  Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z"
                  IsVisible="False"
                  Margin="3"
                  VerticalAlignment="Center" />
            <ContentPresenter Name="PART_HeaderPresenter"
                              Content="{TemplateBinding Header}"
                              Margin="{TemplateBinding Padding}"
                              VerticalAlignment="Center"
                              Grid.Column="2">
              <ContentPresenter.DataTemplates>
                <DataTemplate DataType="sys:String">
                  <AccessText Text="{Binding}" />
                </DataTemplate>
              </ContentPresenter.DataTemplates>
            </ContentPresenter>
            <Path Name="rightArrow"
                  Data="M0,0L4,3.5 0,7z"
                  Fill="{TemplateBinding Foreground}"
                  Margin="10,0,0,0"
                  VerticalAlignment="Center"
                  Grid.Column="3" />
            <Popup Name="PART_Popup" Width="200" PlacementMode="Left" StaysOpen="False"
                   IsOpen="{TemplateBinding IsSubMenuOpen, Mode=TwoWay}">
              <Border>
                <ScrollViewer>
                  <ItemsPresenter Name="PART_ItemsPresenter"
                                  Items="{TemplateBinding Items}"
                                  ItemsPanel="{TemplateBinding ItemsPanel}"
                                  ItemTemplate="{TemplateBinding ItemTemplate}"
                                  Margin="4 2" />
                </ScrollViewer>
              </Border>
            </Popup>
          </Grid>
        </Border>
      </ControlTemplate>
    </Setter>
  </Style-->

    <!--Style Selector="local|RibbonMenu /template/ Menu.RibbonMenuMenu MenuItem:pointerover /template/ Border#root">
    <Setter Property="Background" Value="{DynamicResource ThemeControlHighlightMidBrush}" />
  </Style>

  <Style Selector="local|RibbonMenu /template/ Menu.RibbonMenuMenu MenuItem:selected /template/ Border#root">
    <Setter Property="Background" Value="{DynamicResource ThemeAccentBrush4}" />
  </Style>

  <Style Selector="local|RibbonMenu /template/ Menu.RibbonMenuMenu MenuItem:selected:focus /template/ Border#root">
    <Setter Property="Background" Value="{DynamicResource ThemeAccentBrush3}" />
  </Style>

  <Style Selector="local|RibbonMenu /template/ Menu.RibbonMenuMenu MenuItem:selected:pointerover /template/ Border#root">
    <Setter Property="Background" Value="{DynamicResource ThemeAccentBrush3}" />
  </Style>

  <Style Selector="local|RibbonMenu /template/ Menu.RibbonMenuMenu MenuItem:selected:focus:pointerover /template/ Border#root">
    <Setter Property="Background" Value="{DynamicResource ThemeAccentBrush2}" />
  </Style>
  <Style Selector="local|RibbonMenu /template/ Menu.RibbonMenuMenu MenuItem[IsPointerOver=True]">
    <Setter Property="IsSubMenuOpen" Value="True" />
  </Style>
  <Style Selector="local|RibbonMenu /template/ Menu.RibbonMenuMenu MenuItem[IsPointerOver=False]">
    <Setter Property="IsSubMenuOpen" Value="False" />
  </Style>
  <Style Selector="local|RibbonMenu /template/ ListBox.RibbonMenuPlacesList">
    <Setter Property="BorderThickness" Value="0" />
  </Style>
  <Style Selector="local|RibbonMenu /template/ ListBox.RibbonMenuPlacesList ListBoxItem">
    <Setter Property="Padding" Value="10" />
    <Setter Property="Foreground" Value="{DynamicResource ThemeForegroundBrush}" />
  </Style-->
</Styles>